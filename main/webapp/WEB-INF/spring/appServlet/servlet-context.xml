<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 리소스 매핑 -->
	<resources location="/WEB-INF/views/include/" mapping="/include/**" />
	<resources location="/WEB-INF/views/js/" mapping="/js/**" />
	<resources location="/WEB-INF/views/css/" mapping="/css/**" />
	<resources location="/WEB-INF/views/img/" mapping="/img/**" />
	<resources location="/WEB-INF/views/font/" mapping="/font/**" />
	<resources location="/WEB-INF/views/webfonts/" mapping="/webfonts/**" />
	<resources location="/WEB-INF/views/fonts/" mapping="/fonts/**" />
	<resources location="/WEB-INF/views/json/" mapping="/json/**" />
	<resources location="/WEB-INF/views/include/ckeditor/" mapping="/ckeditor/**" />
	<resources location="/WEB-INF/views/include/summernote/" mapping="/summernote/**" />
	<resources location="/WEB-INF/views/board/" mapping="/board/**" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색(auto scan) --> 
	<context:component-scan base-package="com.sky.springteam" />

    <!-- 파일업로드에 필요한 bean -->
    <beans:bean id="multipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 파일업로드 최대 용량(byte) -->
	<beans:property name="maxUploadSize" value="10485760" />
    </beans:bean>
    <!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath=new String("d:/upload"); -->
    <beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="d:/upload" />
    </beans:bean>
    
    <!-- aop의 설정으로 Proxy 객체를 자동으로 생성 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    
    <!-- 인터셉터 빈 등록 -->
	<beans:bean id="loginInterceptor" class="com.sky.springteam.interceptor.LoginInterceptor" />
	<beans:bean id="signupInterceptor" class="com.sky.springteam.interceptor.SignupInterceptor" />
	<!-- 인터셉터 호출을 위한 url mapping -->
	<interceptors>
		<interceptor>
			<mapping path="/user/pwdcheck.go"/>
			<mapping path="/user/updateuser.go"/>
			<mapping path="/user/logout.do"/>
			<mapping path="/user/pwdcheck.do"/>
			<mapping path="/user/updateuser.do"/>
			<mapping path="/user/deleteuser.do"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/user/signup1.do"/>
			<mapping path="/user/signup2.do"/>
			<mapping path="/user/signup2.go"/>
			<mapping path="/user/signup3.go"/>
			<beans:ref bean="signupInterceptor"/>
		</interceptor>
	</interceptors>
		    
    
</beans:beans>
